# Задача 1 Задайте список из нескольких чисел. Напишите программу,
# которая найдёт сумму элементов списка, стоящих на нечётной позиции.
# *Пример:*
# - [2, 3, 5, 9, 3] -> на нечётных позициях элементы 3 и 9, ответ: 12
l = [2, 3, 5, 9, 3]


def sum(n):
    s = 0
    for i in range(len(n)):
        if i % 2 != 0:
            s = s + n[i]
    return s


# print(f'Ответ: {sum(l)}')
##########################################
# Задача 2. Напишите программу, которая найдёт произведение пар чисел списка.
# Парой считаем первый и последний элемент, второй и предпоследний и т.д.
# *Пример:*
# - [2, 3, 4, 5, 6] => [12, 15, 16];
# - [2, 3, 5, 6] => [12, 15]
l_1 = [2, 3, 4, 5, 6]
l_2 = [2, 3, 5, 6]

def mult_lst(lst):
    new_lst = []
    if len(lst) % 2 != 0:
        l = len(lst) // 2 + 1
    else:
        l = len(lst)//2
    for i in range(l):
        new_lst.append(lst[i]*lst[len(lst)-i-1])
    return new_lst


# print(mult_lst(l_1))
# print(mult_lst(l_2))

# Задача 3. Задайте список из вещественных чисел. 
# Напишите программу, которая найдёт разницу между 
# максимальным и минимальным значением дробной части элементов.
# *Пример:*
# - [1.1, 1.2, 3.1, 5, 10.01] => 0.19
lst = [1.1, 1.2, 3.1, 5, 10.01]


def max_min(lst):
    max_list = []
    for i in lst:
        if float(i) % 1 != 0:
            max_list.append(round(i%1, 2))
    return max(max_list) - min(max_list)


# print(max_min(lst))

# Задача 4. Напишите программу, которая будет преобразовывать десятичное число в двоичное.
# Нельзя использовать готовые функции.
# *Пример:*
# - 45 -> 101101
# - 3 -> 11
# - 2 -> 10
def int_to_binary():
    s = ""
    n = int(input("Введите число для преобразовывания десятичного числа в двоичное:\n"))
    while n != 0:
        s = str(n%2) + s
        n //=2
    return s


print("Задача 4. Напишите программу, которая будет преобразовывать десятичное число в двоичное."
      "\nНельзя использовать готовые функции.")
print(int_to_binary())



